# Memoize argument binding
snippet memoize
	memoize(${1:bindedArgument} => (${2:argument}) => {
		console.log('handle click'${3});
	})${4}
# Button
snippet Button
	<Button onClick={this._on${1:Click}}>${2:label}</Button>${3}
# Log
snippet log
	console.log(${1:'hello world'});${2}
# ES2015 react constructor
snippet constructor
	constructor(${1:props}) {
		super(props);
		this.state({
			${2:// state properties}
		});
	}${3}
# ES2015 function
snippet function
	${1:functionName}(${2:argument})
	{
		${3:// code}
	}${4}
# ES2015 this binded function
snippet bfunction
	${1:functionName} = (${2:argument}) => {
		${3:// code}
	}${4}
# Split element
snippet splitit
	<div className="row">
		<div className="${1:col-6}">${2:content here}</div>
		<div className="${3:col-6}">${4:content here}</div>
	</div>${5}
# React types
snippet proptype
	React.PropTypes.${1:string}
# Boilerplate component
snippet Component
	'use strict';

	import React from 'react';
	import BEM from 'bemjs';
	import { Button } from 'bbbx-components';
	import { components as naming } from 'naming';

	export default class ${1:Name} extends React.Component {
		static displayName = '$1'
		static propTypes = {
			${2:prop}: React.PropTypes.${3:string}
		}
		static defaultProps = {
			${4:prop}: '${5:value}'
		}
		render() {
			const b$1 = BEM.block(naming.$1);

			return (
				<div className={b$1}>
					<p><Icon name="cog" /> My $1</p>
				</div>
			);
		}
	}${6}
